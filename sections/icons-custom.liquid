{{ 'brands-list.css' | asset_url | stylesheet_tag }}
<script src="{{ 'brands-list.js' | asset_url }}" defer="defer"></script>

{% liquid
  assign blocks = section.blocks
  assign items_per_row = section.settings.item_per_row
  assign items_per_row_tablet = items_per_row | divided_by: 2.0 | ceil
  assign enable_slider = false
  if section.blocks.size > items_per_row and section.settings.enable_slider
    assign enable_slider = true
  endif

  assign column_gap = section.settings.column_gap
  assign row_gap = section.settings.row_gap
  assign column_gap_mobile = section.settings.column_gap_mobile
  assign row_gap_mobile = section.settings.row_gap_mobile

  assign columns = 6
  if section.settings.container == 'container'
    assign columns = 4
  endif

  if section.blocks.size < columns
    assign columns = section.blocks.size
  endif

  assign animation_effect = settings.animations
  assign animated = false
  if animation_effect != 'none'
    assign animated = true
    if section.settings.animations != 'inherit'
      assign animation_effect = section.settings.animations
    endif
  endif

  assign container = section.settings.container
  if container == 'w-full'
    assign container = 'container-full'
  endif

  assign classes = 'm-section m-brands-list'
  if section.settings.custom_class != blank
    assign classes = classes | append: ' ' | append: section.settings.custom_class
  endif
  assign classes = classes | append: ' m-gradient' | append: ' m-color-' | append: section.settings.color_scheme
%}

<style>
  #m-brand-list-{{ section.id }} {
    --items: {{ items_per_row }};
    --column-gap: {{ column_gap }}px;
    --column-gap-mobile: {{ column_gap_mobile }}px;
    --row-gap: {{ row_gap }}px;
    --row-gap-mobile: {{ row_gap_mobile }}px;
    --section-padding-top: {{ section.settings.padding_top }}px;
    --section-padding-bottom: {{ section.settings.padding_bottom }}px;
  }
</style>
<section
  id="m-brand-list-{{ section.id }}"
  class="{{ classes }}"
  data-section-type="brand-list"
  data-section-id="{{ section.id }}">
  <div class="{{ container }} m-section-my m-section-py">
    {% render 'index-section-header'
      , section_settings: section.settings %}
    <m-brand-list data-enable-slider="{{ enable_slider }}" class="m-swiper-overflow m:block">
      <div class="m-mixed-layout">
        <div class="m-brands-list__inner m:grid m:grid-3-cols md:m:grid-{{ items_per_row_tablet }}-cols lg:m:grid-{{ items_per_row }}-cols" data-wrapper>
          {% for block in blocks %}
            {% liquid
              assign max_width = '100%'
              assign image = block.settings.image
              assign image_by_url = block.settings.image_by_url

              if block.settings.max_width != blank
                assign max_width = block.settings.max_width
              endif

              if block.settings.image_link != blank
                assign tag = 'a'
              else
                assign tag = 'div'
              endif
            %}
            <div
              class="swiper-slide m:column"
              data-index="{{ forloop.index0 }}"
              {{ block.shopify_attributes }}>
              <{{ tag }}
                                                                                                                                      {% if block.settings.image_link != blank %}
                                                                                                                                      href="{{ block.settings.image_link }}"
                                                                                                                                      {% endif %}
                                                                                                                                      class="m-brands-list__logo-custom{% if animated %} m-scroll-trigger animate--{{ animation_effect }}{% endif %} m:blocks-radius"
                                                                                                                                      {% if animated %}
                                                                                                                                      data-cascade
                                                                                                                                      style="--animation-order: {{ forloop.index }};"
                                                                                                                                      {% endif %}
                                                                                                                                      >
                {% if image_by_url != blank %}
                  {% comment %} theme-check-disable RemoteAsset {% endcomment %}
                  <img
                    src="{{ image_by_url }}"
                    style="max-width: {{ max_width }}"
                    width="auto"
                    height="auto"
                    loading="lazy"
                    class="m-image"
                    alt="">
                {% comment %} theme-check-enable RemoteAsset {% endcomment %}
                {% elsif image != blank %}
                  {% render 'responsive-image'
                    , image: image
                    , wrapper_class: 'm:w-full'
                    , max_width: max_width %}
                {% else %}
                  {{ 'image' | placeholder_svg_tag: 'm-placeholder-svg m:w-full m:h-full' }}
                {% endif %}
              </{{ tag }}>
              {% if block.settings.image_caption != blank %}
                <p class="m-image-caption">
                  {{ block.settings.image_caption }}
                </p>
              {% endif %}
            </div>
          {% endfor %}
        </div>
      </div>
    </m-brand-list>
  </div>
</section>

{% schema %}
  {
    "name": "Icons Custom",
    "disabled_on": {
      "groups": ["header", "footer"]
    },
    "settings": [
      {
        "type": "paragraph",
        "content": "[Watch tutorial](https://foxecom.link/zIc7E8)"
      },
      {
        "type": "header",
        "content": "Section header"
      },
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Icons Custom"
      },
      {
        "type": "select",
        "id": "heading_size",
        "label": "Heading size",
        "default": "h3",
        "options": [
          {
            "label": "Medium",
            "value": "h3"
          }, {
            "label": "Large",
            "value": "h2"
          }
        ]
      }, {
        "type": "text",
        "id": "subheading",
        "label": "Subheading"
      }, {
        "type": "select",
        "id": "header_alignment",
        "label": "Text alignment",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "Left"
          }, {
            "value": "center",
            "label": "Center"
          }
        ]
      }, {
        "type": "header",
        "content": "General"
      }, {
        "type": "select",
        "id": "container",
        "label": "Container type",
        "default": "container-fluid",
        "options": [
          {
            "value": "container-fluid",
            "label": "Default"
          }, {
            "value": "w-full",
            "label": "Full width"
          }, {
            "value": "container",
            "label": "Use container box"
          }
        ]
      }, {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "Color scheme"
      }, {
        "type": "range",
        "id": "item_per_row",
        "label": "Images per row",
        "min": 2,
        "max": 10,
        "step": 1,
        "default": 4
      }, {
        "type": "header",
        "content": "Item gaps"
      }, {
        "type": "range",
        "id": "column_gap",
        "label": "Column gap",
        "min": 0,
        "max": 100,
        "step": 1,
        "default": 30,
        "unit": "px"
      }, {
        "type": "range",
        "id": "row_gap",
        "label": "Row gap",
        "min": 0,
        "max": 100,
        "step": 1,
        "default": 30,
        "unit": "px"
      }, {
        "type": "range",
        "id": "column_gap_mobile",
        "label": "Column gap mobile",
        "min": 0,
        "max": 50,
        "step": 1,
        "default": 10,
        "unit": "px"
      }, {
        "type": "range",
        "id": "row_gap_mobile",
        "label": "Row gap mobile",
        "min": 0,
        "max": 50,
        "step": 1,
        "default": 10,
        "unit": "px"
      }, {
        "type": "header",
        "content": "Section Padding"
      }, {
        "type": "range",
        "id": "padding_top",
        "label": "Padding Top",
        "default": 50,
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px"
      }, {
        "type": "range",
        "id": "padding_bottom",
        "label": "Padding Bottom",
        "default": 50,
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px"
      }, {
        "type": "header",
        "content": "Custom Attributes"
      }, {
        "type": "text",
        "id": "custom_class",
        "label": "Custom classes"
      }, {
        "type": "header",
        "content": "Animations"
      }, {
        "type": "select",
        "id": "animations",
        "label": "Visible in the view animation",
        "default": "inherit",
        "options": [
          {
            "value": "inherit",
            "label": "Inherit global setting"
          },
          {
            "value": "fade-in",
            "label": "Fade in"
          },
          {
            "value": "fade-in-up",
            "label": "Fade in up"
          },
          {
            "value": "fade-in-left",
            "label": "Fade in left"
          }, {
            "value": "fade-in-right",
            "label": "Fade in right"
          }
        ]
      }
    ],
    "blocks": [
      {
        "type": "image",
        "name": "Image",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "text",
            "id": "image_by_url",
            "label": "Image from URL",
            "info": "Enter an image URL with extension .svg, .png or .jpg"
          },
          {
            "type": "url",
            "id": "image_link",
            "label": "Image Link"
          },
          {
            "type": "text",
            "id": "max_width",
            "label": "Image width (px)",
            "default": "150px",
            "placeholder": "eg: 100px",
            "info": "Leave blank to use original width."
          }, {
            "type": "text",
            "id": "image_caption",
            "label": "Caption",
            "default": "Psyche Stress",
            "info": "Add a brief text below the image"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Icons Custom",
        "category": "Image",
        "blocks": [
          {
            "type": "image"
          }, {
            "type": "image"
          }, {
            "type": "image"
          }, {
            "type": "image"
          }
        ]
      }
    ]
  }
{% endschema %}